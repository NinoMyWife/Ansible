Help on module OS:

NAME
    OS

DESCRIPTION
    ##########################################################################
    # Importattion des biblioth√®ques
    ##########################################################################

CLASSES
    builtins.object
        Class_OS
    
    class Class_OS(builtins.object)
     |  A class which contains all the methods on the OS:
     |  
     |  - Add New OS
     |  - Get OS ID Windows Server
     |  - Get OS ID Linux Server
     |  - OS Exists
     |  - Remove OS
     |  
     |  Methods defined here:
     |  
     |  AddNewOS(self, Name, Type, Version)
     |      This function add a new OS from the DataBase
     |      
     |      Args:
     |          Name (str): Name of the OS
     |          Type (str): Type of the OS
     |          Version (str): Version if the OS
     |      
     |      Raises:
     |          mysql.connector.errors.Error: Error mysql
     |      
     |      Returns:
     |          Bool: 0 it's good, 1 An error has occured
     |  
     |  GetOSIDLin(self, IPServer, UserAnsible, PassAnsible)
     |      This function get the OS ID of Linux Server
     |      
     |      Args:
     |          IPServer (str): A Server IP
     |          UserAnsible (str): User Ansible
     |          PassAnsible (str): Password Ansible
     |      
     |      Raises:
     |          Exception: Connection error | Execution error
     |          mysql.connector.errors.Error: Mysql Connection error
     |      
     |      Returns:
     |          int: Return the ID of Linux Server OS
     |  
     |  GetOSIDWin(self, IPServer, UserAnsible, PassAnsible)
     |      This function get the OS ID of Windows Server
     |      
     |      Args:
     |          IPServer (str): A Server IP
     |          UserAnsible (str): User Ansible
     |          PassAnsible (str): Password Ansible
     |      
     |      Raises:
     |          mysql.connector.errors.Error: Mysql Connection error
     |      
     |      Returns:
     |          int: Return the ID of Windows Server OS
     |  
     |  OsExists(self, Name)
     |      This function will verify if the OS exist in DataBase
     |      
     |      Args:
     |          Name (str): Name of the OS
     |      
     |      Raises:
     |          mysql.connector.errors.Error: Mysql error
     |      
     |      Returns:
     |          int: 1 OS exist, 0 OS doesn't exist
     |  
     |  RemoveOS(self, Name)
     |      This function remove a OS from the DataBase
     |      
     |      Args:
     |          Name (str): Name of the OS
     |      
     |      Raises:
     |          mysql.connector.errors.Error: Error mysql
     |      
     |      Returns:
     |          Bool: 0 it's good, 1 An error has occured
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FILE
    /root/ScriptsInventaireDynamique/Maintest/OS.py


